module ActiveStoragePath
  extend ActiveSupport::Concern

  class_methods do
    def has_one_attached_with(name, path:)
      has_one_attached name

      define_method "#{name}=" do |attachable|
        action = super attachable

        return action unless action.is_a? ActiveStorage::Attached::Changes::CreateOne
        return action unless action.blob.service_name == 'google_dev' || action.blob.service_name == 'google' || action.blob.service_name == 'google_staging'

        # This is how it is generated by default
        original_key = action.blob.class.generate_unique_secure_token

        case self
        when OrderDocument
          custom_key = "#{Date.today}_#{self.document.name.gsub(' ', '_')}-#{original_key}"
        when OrderAccount
          custom_key = "#{self.account.name.gsub(' ', '_')}/#{Date.today}_RÃ©siliation_#{self.account.name.gsub(' ', '_')}-#{original_key}"
        when Order
          custom_key = "Facture-#{original_key}"
        when Blogpost
          custom_key = original_key
        end

        # The key is used for path + filename when used. Append path.
        action.blob.key = File.join(instance_exec(&path), custom_key)

        action
      end
    end
  end
end
